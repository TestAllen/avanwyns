#!/bin/bash
#SBATCH --mail-type=ALL
#SBATCH -o %j.err

date

#necessary if modules are to be used
source /usr/share/Modules/init/bash

cd $SLURM_SUBMIT_DIR

##########VARIABLES###########
D_DIR="$E_DIR/data"
S_DIR="$E_DIR/scripts"
USER=`whoami`
LABEL=`pwd | sed 's|'$E_DIR'/||' | sed 's|/production||' | sed 's|/|_|'`
ANAL_JOB="analysis_$LABEL"

RUN="prod"
OLD="../equilibration/mdwat/mdwat.rst"
PRMTOP="$D_DIR/ligand_at_sites.prmtop"
REF="../equilibration/mdwat/mdwat.rst"

AMBER_DYN_V=`grep -A1 "dynamics" $D_DIR/input_parameters | tail -1`
#################END VARIABLES################

echo $SLURM_JOB_NODELIST

module unload amber
module unload mvapich2-2.2
module unload cuda
module load amber/$AMBER_DYN_V
if [ "$QUEUE" == "una" ]; then
	echo "No una queue on skylight"
	exit
	MPI="mpiexec"
	INTERFACE="-iface ib0"
	EXE="pmemd.MPI"
	NSLOTS=`grep -c "" $PBS_NODEFILE`
	module load mpi/mvapich2-x86_64
	module list
	
	$MPI -np $NSLOTS $INTERFACE $EXE -O -i $RUN.in -o $RUN.out -p $PRMTOP -c $OLD -r $RUN.rst -x $RUN.mdcrd -ref $REF

	rm mdinfo prod.in logfile

elif [ "$QUEUE" == "gpu" ] || [ "$QUEUE" == "gpup" ]; then
	EXE="pmemd.cuda"
	module list
	nvidia-smi

	$EXE -O -i $RUN.in -o $RUN.out -p $PRMTOP -c $OLD -r $RUN.rst -x $RUN.mdcrd -ref $REF
	
	rm mdinfo prod.in
else
	echo "Error ----> Executable not properly set!!!"
        ssh skylight 'echo "Error ----> Executalbe not properly set!" | mail -s "prod '$LABEL' failed" '$USER'@hamilton.edu'
        exit
fi

if ! tail -1 prod.out | grep -q "Total wall time"; then
        echo "Error ----> production did not complete properly!!!"
        ssh skylight 'echo "Error ----> production did not complete properly!" | mail -s "prod '$LABEL' failed" '$USER'@hamilton.edu'
        exit
fi

if [ ! -e $RUN.mdcrd ]; then
	echo "Error ----> $RUN.mdcrd was not found!!!"
        ssh skylight 'echo "Error ----> '$RUN'.mdcrd was not found!" | mail -s "prod '$LABEL' failed" '$USER'@hamilton.edu'
        exit
fi
if [ ! -e $RUN.rst ]; then
	echo "Error ----> $RUN.rst was not found!!!"
	ssh skylight 'echo "Error ----> '$RUN'.rst was not found!" | mail -s "prod '$LABEL' failed" '$USER'@hamilton.edu'
	exit
fi

mkdir ../analysis
cd ../analysis
cp $S_DIR/analysis.job ./
ANAL_DIR=`pwd`

#sbatch can only take environmental variables as command line arguments, not shell variables, so you have to export anything you want to send 
export E_DIR=$E_DIR
export QUEUE=$QUEUE

sbatch --mail-user=$USER@hamilton.edu --job-name="$ANAL_JOB" analysis.job --export=E_DIR,QUEUE

date
